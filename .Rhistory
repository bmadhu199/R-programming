reg_model <- lm(weights~height , data = train_set)
reg_model <- lm(weights~height , data = train_set)
train_set <- women[training_indices,]
reg_model <- lm( weights ~ height , data = train_set)
reg_model <- lm( weight ~ height , data = train_set)
reg_model
summary(reg_model)
c <- mean(women$weight) - (3.45803) * (mean(women$height))
c
cov(weight*height)
cov( weight,height)
cov(x = weight,y = height)
sum <- c(1,2,3,4,5)
mean(sum)
sd(sum)
sum <- c(1,2,3,4)
mean(sum)
sd(sum)
1 - mean(sum)
mean(sum)
summary(reg_model)
sum <- c(1,2,3,4)
sum <- c(1,2,3,4,5)
mean(sum)
sd(sum)
3.45803 /0.09137
?pt
t_value = 3.45803 /0.09137
pt(t_value, 11)
pt(-14.77, 11)
pt(-14.77, 11) *2
p_value <- pt(-14.77, 11)
p <- p_value *2
p
resu <- c(-1,9583,-1.0422,-0.2485,0.7899,2.8355)
mean(resu)
sd(resu)
sqrt(5)
sd(resu)/sqrt(5)
reg_model$residuals
sd(reg_model$residuals)/sqrt(5)
sd(reg_model$residuals)/sqrt(13)
sd(reg_model$residuals)/sqrt(13)
sd(reg_model$residuals)/sqrt(11)
sum(reg_model$residuals)
sum(reg_model$residuals)/11
sqrt(sum(reg_model$residuals)/11)
sqrt(sum(reg_model$residuals)/11)
sqrt(sum((reg_model$residuals) - mean(reg_model$residuals) )/11)
sum((reg_model$residuals) - mean(reg_model$residuals) )**2)
sum(((reg_model$residuals) - mean(reg_model$residuals) )**2)
sqrt(sum(((reg_model$residuals) - mean(reg_model$residuals) )**2)/11)
summary(reg_model)
sqrt(sum(((reg_model$residuals) - mean(reg_model$residuals) )**2)/11)
(women$height) - mean(women$height)
( (women$height) - mean(women$height) )**2
sum(( (women$height) - mean(women$height) )**2 )
sqrt(sum(( (women$height) - mean(women$height) )**2 ) /11)
sqrt(sum(( (women$height) - mean(women$height) )**2 ) /11)/sqrt(11)
res_line <- sqrt(sum(((reg_model$residuals) - mean(reg_model$residuals) )**2)/11)
mean_line <-  sqrt(sum(( (women$height) - mean(women$height) )**2 ) /11)/sqrt(11)
1- res_line /mean_line
sqrt(sum(( (women$height) - mean(women$height) )**2 ) /11)/sqrt(11)
sqrt(sum(((reg_model$residuals) - mean(reg_model$residuals) )**2)/11)
reg_model$residuals    #list the resudial values
sum(( (train_set$weight) - (reg_model$fitted.values) )^2)
ssr <- sum(( (train_set$weight) - (reg_model$fitted.values) )^2)
( (train_set$weight) - mean( train_set$weight ))^2
sum( ( (train_set$weight) - mean( train_set$weight ))^2 )
sst  <-    sum( ( (train_set$weight) - mean( train_set$weight ))^2 )
1 - ssr/sst
ggplot(women,aes(x= height,y= weight))+geom_point(color ='red')+ggtitle('Height VS Weight')+ylab("Height")+xlab("Weight")
c <- mean(women$weight) - (3.45803) * (mean(women$height))
c
sum <- c(1,2,3,4,5)
mean(sum)
summary(reg_model)
predict(test_set)
?predict
predict(test_set)
predict(reg_model)
predict(reg_model,test_set)
View(predict(reg_model,test_set))
View(predict(reg_model,test_set))
ggplot(mtcars,aes(x= factor(cyl),y= mpg))+geom_boxplot(,color = 'blue')+ylab("Miles per hr")+xlab("cylinder")
ggplot(train_set) + geom_point(aes(x=height,y=weight))+geom_line(aes(x = height,y = predict(reg_model,train_set)))
ggplot(train_set) + geom_point(aes(x=height,y=weight))+geom_line(aes(x = height,y = predict(reg_model,train_set)),color ='blue')
ggplot(train_set) + geom_point(aes(x=height,y=weight),color ='red')+geom_line(aes(x = height,y = predict(reg_model,train_set)),color ='blue')
write.csv(women,"dataset.csv",row.names = FALSE)
getwd()
datasets()
datasets()
data()
data(sleep)
rm(list = ls())
data(sleep)
View(sleep)
data()
data(ability.cov)
View(ability.cov)
data(diamonds)
View(diamonds)
head(dimonds)
head(dimonds)
head(diamonds)
tail(diamonds)
summary(diamonds)
colnames(diamonds)
colSums(is.na(diamonds))
mean(diamonds$price)
max(diamonds$price)
select(diamonds,c(1,7))
head(select(diamonds,c(1,7)))
head(select(diamonds,c(1,7)))
select(diamonds,c(1,7))
dataD <- select(diamonds,c(1,7))
dataD
library(ggplot2)
library(dplyr)
ggplot(dataD , aes(x='carat',y='price'))+geom_point(color ='red')+ggtitle('Diamonds Price VS Carats')+ylab('Price')+xlab('Carats')
ggplot(women,aes(x= height,y= weight))+geom_point(color ='red')+ggtitle('Height VS Weight')+ylab("Height")+xlab("Weight")
ggplot(women,aes(x= height,y= weight))+geom_point(color ='red')+ggtitle('Height VS Weight')+ylab("Height")+xlab("Weight")
ggplot(dataD , aes(x='carat',y='price'))+geom_point(color ='red')+ggtitle('Diamonds Price VS Carats')+ylab('Price')+xlab('Carats')
ggplot(dataD,aes(x= height,y= weight))+geom_point(color ='red')+ggtitle('Height VS Weight')+ylab("Height")+xlab("Weight")
ggplot(dataD ,aes(x='carat',y='price'))+geom_point(color ='red')+ggtitle('Diamonds Price VS Carats')+ylab('Price')+xlab('Carats')
ggplot(dataD,aes(x= 'carat',y= 'price'))+geom_point(color ='red')+ggtitle('Height VS Weight')+ylab("price")+xlab("carat")
cor(dataD$carat,dataD$price)
plot(dataD$carat,dataD$price)
plot(dataD$carat,dataD$price,aes(x='carat',y='price'))
dataD <- head(select(diamonds,c(1,7)))
ggplot(dataD,aes(x= 'carat',y= 'price'))+geom_point(color ='red')+ggtitle('Height VS Weight')+ylab("price")+xlab("carat")
dataD <- select(diamonds,c(1,7))
summary(dataD)
plot(dataD$carat,dataD$price)
dataD <- head(select(diamonds,c(1,7)))
plot(dataD$carat,dataD$price)
plot(dataD$carat,dataD$price,xlab='Carat',ylab = 'Price')
plot(dataD$carat,dataD$price,xlab='Carat',ylab = 'Price',title(main = 'Carat VS Price'))
plot(dataD$carat,dataD$price,xlab='Carat',ylab = 'Price',title(main = 'Carat VS Price'))
?sample()
training_indecies = sample(1: nrow(dataD),0.80 * nrow(dataD))
training_indecies = sample(1: nrow(dataD), round(0.80 * nrow(dataD)))
training_indecies
dataD <- select(diamonds,c(1,7))
summary(dataD)
cor(dataD$carat,dataD$price)
plot(dataD$carat,dataD$price,xlab='Carat',ylab = 'Price',title(main = 'Carat VS Price'))
training_indecies = sample(1: nrow(dataD), round(0.80 * nrow(dataD)))
training_indecies
train_set <- dataD[training_indecies,]
test_set <- dataD[-training_indecies,]
View(test_set)
reg_model <- lm(carat ~ price, data = train_set)
reg_model
summary(reg_model)
predict(reg_model,test_set)
View(predict(reg_model,test_set))
View(predict(reg_model,test_set))
ggplot(train_set) + geom_point(aes(x=height,y=weight),color ='red')+geom_line(aes(x = height,y = predict(reg_model,train_set)),color ='blue')
ggplot(dataD,aes(x= carat,y= price))+geom_point(color ='red')+ggtitle('Height VS Weight')+ylab("price")+xlab("carat")
ggplot(train_set)+geom_point(aes(x=carat,y=price),color = 'red')+geom_line(aes(x=carat,y=price(reg_model,train_set)),color='blue')
ggplot(train_set)+geom_point(aes(x=carat,y=price),color = 'red')+geom_line(aes(x=carat,y=predict(reg_model,train_set)),color='blue')
set.seed(123)
data(diamonds)
data()
View(diamonds)
head(diamonds)
tail(diamonds)
summary(diamonds)
colnames(diamonds)
colSums(is.na(diamonds))
mean(diamonds$price)
max(diamonds$price)
dataD <- select(diamonds,c(1,7))
library(ggplot2)
library(dplyr)
summary(dataD)
cor(dataD$carat,dataD$price)
plot(dataD$carat,dataD$price,xlab='Carat',ylab = 'Price',title(main = 'Carat VS Price'))
ggplot(dataD,aes(x= carat,y= price))+geom_point(color ='red')+ggtitle('Height VS Weight')+ylab("price")+xlab("carat")
training_indecies = sample(1: nrow(dataD), round(0.80 * nrow(dataD)))
training_indecies
set.seed(123)
train_set <- dataD[training_indecies,]
test_set <- dataD[-training_indecies,]
View(test_set)
reg_model <- lm(carat ~ price, data = train_set)
reg_model
summary(reg_model)
predict(reg_model,test_set)
View(predict(reg_model,test_set))
ggplot(train_set) + geom_point(aes(x=height,y=weight),color ='red')+geom_line(aes(x = height,y = predict(reg_model,train_set)),color ='blue')
ggplot(train_set)+geom_point(aes(x=carat,y=price),color = 'red')+geom_line(aes(x=carat,y=predict(reg_model,train_set)),color='blue')
View(predict(reg_model,test_set))
View(test_set)
training_indecies = sample(1: nrow(dataD), round(0.98 * nrow(dataD)))
training_indecies
set.seed(123)
train_set <- dataD[training_indecies,]
test_set <- dataD[-training_indecies,]
View(test_set)
reg_model <- lm(carat ~ price, data = train_set)
reg_model
summary(reg_model)
predict(reg_model,test_set)
View(predict(reg_model,test_set))
ggplot(train_set) + geom_point(aes(x=height,y=weight),color ='red')+geom_line(aes(x = height,y = predict(reg_model,train_set)),color ='blue')
ggplot(train_set)+geom_point(aes(x=carat,y=price),color = 'red')+geom_line(aes(x=carat,y=predict(reg_model,train_set)),color='blue')
data(WWWusage)
View(WWWusage)
head(WWWusage)
data(Seatbelts)
View(Seatbelts)
data(UCBAdmissions)
View(UCBAdmissions)
ggplot(train_set)+geom_point(aes(x=carat,y=price),color = 'red')+geom_line(aes(x=carat,y=predict(reg_model,train_set)),color='blue')
data(diamonds)
View(diamonds)
summary(dataD)
summary(reg_model)
tail(diamonds)
cor(dataD$carat,dataD$price)
plot(dataD$carat,dataD$price,xlab='Carat',ylab = 'Price',title(main = 'Carat VS Price'))
hist(dataD$price)
dataD$log_price = log(dataD$price)
hist(dataD$log_price)
dataD$log_price = sqrt(dataD$price)
hist(dataD$log_price)
plot(dataD$carat,dataD$price,xlab='Carat',ylab = 'Price',title(main = 'Carat VS Price'))
summary(reg_model)
set.seed(123)
training_indecies = sample(1: nrow(dataD), round(0.85 * nrow(dataD)))
train_set <- dataD[training_indecies,]
test_set <- dataD[-training_indecies,]
reg_model <- lm(carat ~ price, data = train_set)
summary(reg_model)
ggplot(train_set)+geom_point(aes(x=carat,y=price),color = 'red')+geom_line(aes(x=carat,y=predict(reg_model,train_set)),color='blue')
data(diamonds)
data()
View(diamonds)
head(WWWusage)
tail(diamonds)
summary(diamonds)
colnames(diamonds)
colSums(is.na(diamonds))
mean(diamonds$price)
max(diamonds$price)
dataD <- select(diamonds,c(1,7))
library(ggplot2)
library(dplyr)
summary(dataD)
cor(dataD$carat,dataD$price)
dataD$log_price = sqrt(dataD$price)
hist(dataD$log_price)
plot(dataD$carat,dataD$price,xlab='Carat',ylab = 'Price',title(main = 'Carat VS Price'))
set.seed(123)
training_indecies = sample(1: nrow(dataD), round(0.85 * nrow(dataD)))
training_indecies
train_set <- dataD[training_indecies,]
test_set <- dataD[-training_indecies,]
View(test_set)
reg_model <- lm(carat ~ price, data = train_set)
reg_model
summary(reg_model)
predict(reg_model,test_set)
View(predict(reg_model,test_set))
ggplot(train_set)+geom_point(aes(x=carat,y=price),color = 'red')+geom_line(aes(x=carat,y=predict(reg_model,train_set)),color='blue')
package(car)
install.packages(car)
install.packages("car")
prestige
library(car)
library("car")
library(car)
library(car)
install.packages("car")
library(car)
library(car)
install.packages("car")
install.packages("car")
setwd("~/Documents/R-programming")
install.packages("car")
install.packages("car")
pwd
wd
setwd("~/")
install.packages("car")
install.packages("car")
install.packages("car")
iris
scale_data <- scale(dataset)
scale_data <- scale(dataset)
dataset <- iris
scale_data <- scale(dataset)
dataset <- iris[,-5]
dataset
scale_data <- scale(dataset)
pca_model <- prcomp(scale_data,T,T)
pca_model$sdev
pca_model$center
pca_model$scale
scale_data <- scale(dataset, center = T, scale = T)
pca_model <- prcomp(scale_data)
pca_model$center
pca_model$scale
View(dataset)
pca_model <- prcomp(scale_data,center = T,scale. = T)
pca_model$center
pca_model$scale
eigen(scale_data)
eigen(cov(scale_data))
pca_model$rotation
svd(scale_data)
svd(scale_data)$v
cov(scale_data)
svd(scale_data)$v
eigen(cov(scale_data))
svd(scale_data)$u
View(scale_data)
View(scale_data)
svd(scale_data)$d
sigma <- svd(scale_data)$d
t(svd(scale_data)$u)
t(svd(scale_data)$u)*sigma
eigen(scale_data %*% t(scale_data))
length(eigen(scale_data %*% t(scale_data))$vectors)
(eigen(scale_data %*% t(scale_data))$vectors)
(eigen(scale_data %*% t(scale_data))$vectors)[[1]]
eigen(scale_data %*% t(scale_data))[[1]]
length(eigen(scale_data %*% t(scale_data)))$vectors
summary(pca_model)
vec_char <- c('A','B','C')
class(vec_char)
com_vec <- c('A',1,'B',2,'C',3)
class(com_vec)
1:100
1:100/2
list(1,"name",2,"place")
list(1,"name",list(1,2,3))
list[3]
numn_list <- 1:300
numn_list
numn_list[150:length(numn_list)]
bool_vec <- list(1,'A',3,'B',T,F)
bool_vec
bool_vec[5]
comb_vec <- list(1,c(1,2,3,list(1,2)))
com_vec[2][4][2]
com_vec[2][[4]][2]
com_vec[2][4][2]
com <- list(1,c(1,2,3,list(1,2)))
com[2]
com[2][5]
com[2][4]
com <- list(1,c(1,2,3,list(1,2)))
com[2][[4]][2]
com[[2]][[5]]
com_vec[2][5]
com_vec[2][3]
com_vec[[2]][3]
comb_vec <- list(1,c(1,2,3,list(1,2)))
comb_vec[2][4]
comb_vec[[2]][3]
comb_vec[[2]][5]
com <- list(1,c(1,2,3,list(1,2)))
com[2]
com[[2]][[4]][1]
com[[2]][[5]]
com[[2]][5]
com[2][[4]][2]
dell <- list(1,2,"name",list(3,4,list(2,3)),1,list(list(list(1,2,3))))
dell[[6]][2]
dell[[6]][1][1][1]
dell[[4]][[3]][2]
sony <- list(list(1,"ABC",list(list(1,2,3,4)),'DEP', list(list(1,c(2,3)))))
?matrix
matrix(1:9,3,3)
matrix(1:9,3,3,byrow = T)
mat[[2]]
mat[1:3,mat[1:2,2:3]]
mat[2,]
mat[1:2,]
mat1 <- matrix(1:9,3,3,byrow = T)
mat5 <- matrix(1:9,3,3,byrow = T)
mat6 <- matrix(1:9,3,3,byrow = T)
mat5 + mat6
mat5 + mat6
mat5 %*% mat6
datasets::cars
datasets::AirPassengers
datasets::quakes
datasets::rivers
datasets::USArrests
datasets::Titanic
datasets(Titanic)
dataset(Titanic)
library(Titanic)
install.packages(dplyr)
install.packages("dplyr")
library(dplyr)
install.packages("Titanic")
install.packages("titanic")
library(titanic)
Summary(Titanic)
Titanic
Summary(Titanic)
install.packages("nycflights13")
library(nycflights13)
nycflights13
nycflights13::weather
weather_data <- nycflights13::weather
head(weather_data)
is.na(weather_data)
tail(weather_data)
summary(weather_data)
head(weather_data)
install.packages("outliers")
library(outliers)
outl <- outlier(weather_data$wind_speed,logical = TRUE)
sum(outl)
?outlier()
?sum()
matri3 <- matrix(1:100,10,10,byrow = T)
matri2 <- matrix(1:100,10,10,byrow = T)
matri2+matri3
matri3 - matri2
matri2 %*% matri3
matri2[1,3]
matri2[,1]
matri2[1,]
matri2[1,]
matri2[c(1,10),]
matri2[c(1:5,10:5),]
matri2[c(1,10,7),]
var <- c(6,7,8,9,10,11)
var > 7
var[var > 7]
var[ var > 7 & var< 10]
seq(1,200,2)
seq(0,200,2)
seq(0,200,2)[seq(1,200,2) > 50 & seq(1,200,2) < 150]
n <- floor(rnorm(10000, 500, 100))
t <- table(n)
barplot(t,xlab = "numbers",ylab = "Frequencies")
numbs <- 3456.23
class(numbs)
?typeof
vec_char <- c('A','B','C')
class(vec_char)
com_vec <- c('A',1,'B',2,'C',3)
class(com_vec)
1:100
1:100/2
?rep
?list
number[1:2]
list[1:3]
list[3]
list(1,"name",2,"place")
list(1,"name",list(1,2,3))
list[3]
list[2]
L <- list(1,"name",list(1,2,3))
list[2]
L[2]
L[1:2]
L[3]
var > 7
age <- c(22,11,7)
animals <- c("girrafe","lion","Dog")
names(age) <- animals
?names()
age
animi <- c('zebra','monkey','robot')
names(age) <- animi
age
paste(1:4,4:1,1:4,sep="-")
?paste()
paste("heloo-world", sep = "-")
paste("hello","world",sep = " ",collapse = " ")
paste("hello","world",sep = "-",collapse = " ")
T&F
(T) & (c(T,F))
var =10
if ( var == 1) {
var = var +1
}else {
var = var - 1
}
var
for (veg  in seq(1,100,2) ) {
temp = veg + temp
}
print(temp)
temp = 0
for (veg  in seq(1,100,2) ) {
temp = veg + temp
}
print(temp)
temp = 0
for (veg  in seq(1,100) ) {
temp = veg + temp
}
print(temp)
my_sum <- function(v){
temp = 0
for (i in v) {
temp <- temp +i
}
return(temp)
}
my_sum(1:100)
